hist(testRuns(1), main = "Résultat du test des runs pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
source('~/TP_Probabilites/seance1.R', echo=TRUE)
source('~/TP_Probabilites/Demarrer_R_codes.R', echo=TRUE)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
source('~/TP_Probabilites/generateurs.R', echo=TRUE)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
setwd("//servif-home/homes/cetienne/Mes documents/TP_Probabilites")
source('~/TP_Probabilites/seance1.R', echo=TRUE)
install.packages("randtoolbox")
source('~/TP_Probabilites/Tests.R', echo=TRUE)
source('~/TP_Probabilites/generateurs.R', echo=TRUE)
hist(testRuns(1), main = "Résultat du test des runs pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(2), main = "Résultat du test des runs pour StandardMinimal", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(3), main = "Résultat du test des runs pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(4), main = "Résultat du test des runs pour la suite de Sobol", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
val <- RANDU(k = 1000, graine = tab[i])
tabPval[i] <- order.Test(val, 4, FALSE)&p.value
val <- RANDU(k = 1000, graine = tab[i])
tabPval[i] <- order.test(val, 4, FALSE)&p.value
TestOrdre(1)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
TestOrdre(1)
val
val <- StandardMinimal(k = 1000, graine = 200)
as.vector(val)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
TestOrdre(1)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
TestOrdre(1)
(TestOrdre(1))
hist(TestOrdre(1))
hist(TestOrdre(1))
TestOrdre(1)
(TestOrdre(1))
hist(TestOrdre(1))
hist(TestOrdre(1), break = 100 )
hist(TestOrdre(1), breaks = 100 )
hist(TestOrdre(1), main = "Résultat du test d'ordre pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(2), main = "Résultat du test d'ordre pour StandardMinimal", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
hist(TestOrdre(2), main = "Résultat du test d'ordre pour StandardMinimal", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(3), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(4), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
hist(QualiteGenerateur(3), main = "Résultat du test fréquence momobits pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks = 100)
library(randtoolbox)
source('generateurs.R')
sMT <- 2504
Nsimu <- 1000
Nrepet <- 20
uMt <- MersenneTwister(n, 1, 200)
library(randtoolbox)
source('generateurs.R')
sMT <- 2504
Nsimu <- 1000
Nrepet <- 20
sob <- Sobol(Nsimu,Nrepet)
mt <- MersenneTwister(Nsimu,Nrepet,sMT)$x
par(mfrow=c(1,2))
hist(mt[,1],xlab='',main='Mersenne Twister')
hist(sob[,1],xlab='',main='Sobol')
(bit_mt <- binary(mt[1,1]))
RANDU(10, 215)
StandardMinimal(10, 215)
hist(RANDU(1000, 200),main = "Histogramme de RANDU(1000,200)", xlab = "valeur aléatoire générée", ylab="fréquence")
hist(StandardMinimal(1000, 200),main = "Histogramme de StandardMinimal(1000,200)", xlab = "valeur aléatoire générée", ylab="fréquence")
mt = MersenneTwister(1000, 1, 200)
hist(mt$x[,1], main="Histogramme de MersenneTwister(1000,1,200)", xlab = "valeur aléatoire générée", ylab="fréquence")
sob <- Sobol(1000,1)
hist(sob, main="Histogramme de la suite de Sobol (1000,1)",  xlab = "valeur aléatoire générée", ylab="fréquence")
n <- 1000
uRandu <- RANDU(1000,20)
plot(uRandu[1:(n-1)],uRandu[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour RANDU", xlab = "valeur courante", ylab = "valeur suivante")
n <- 1000
uStm <- StandardMinimal(1000,20)
plot(uStm[1:(n-1)],uStm[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour StandardMinimal", xlab = "valeur courante", ylab = "valeur suivante")
n <- 1000
uMt <- MersenneTwister(n, 1, 200)
plot(uMt$x[1:(n-1)],uMt$x[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour MersenneTwister", xlab = "valeur courante", ylab = "valeur suivante")
n <- 1000
uSob <- Sobol(n,1)
plot(uSob[1:(n-1)],uSob[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour MersenneTwister", xlab = "valeur courante", ylab = "valeur suivante")
hist(QualiteGenerateur(1), main = "Résultat du test fréquence momobits pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(QualiteGenerateur(2), main = "Résultat du test fréquence momobits pour StandardMinimum", xlab = "Pvaleur obtenue", ylab="fréquence", breaks = 100)
hist(QualiteGenerateur(3), main = "Résultat du test fréquence momobits pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks = 100)
hist(QualiteGenerateur(4), main = "Résultat du test fréquence momobits pour Sobol", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(1), main = "Résultat du test des runs pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(2), main = "Résultat du test des runs pour StandardMinimal", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(3), main = "Résultat du test des runs pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(testRuns(4), main = "Résultat du test des runs pour la suite de Sobol", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(1), main = "Résultat du test d'ordre pour RANDU", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(2), main = "Résultat du test d'ordre pour StandardMinimal", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(3), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(3), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
source('~/TP_Probabilites/Tests.R', echo=TRUE)
hist(TestOrdre(3), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
n <- 1000
uSob <- Sobol(n,1)
plot(uSob[1:(n-1)],uSob[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour la suite de Sobol", xlab = "valeur courante", ylab = "valeur suivante")
n <- 1000
uSob <- Sobol(n,1)
plot(uSob[1:(n-1)],uSob[2:n], main = "Valeur obtenue en fonction de la valeur précédente pour la suite de Sobol", xlab = "valeur courante", ylab = "valeur suivante")
hist(TestOrdre(3), main = "Résultat du test d'ordre pour MersenneTwister", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
hist(TestOrdre(4), main = "Résultat du test d'ordre pour la suite de Sobol", xlab = "Pvaleur obtenue", ylab="fréquence", breaks=100)
tabPval <- array(0, 100)
tab <- sample(1:2000,100)
for (i in 1:100){
val <- Sobol(1000, 1)
tabPval[i] <- Runs(val, 31)
}
tabPval
val
valTest <- Sobol(1000, 1)
valTest <- Sobol(1, 1)
valTest
Runs(valTest, 31)
binary(valTest[1])[(32-31+1):32]
valTest <- Sobol(20, 1)
valTest
factorial(5)
e_1
1_1
source('~/TP_Probabilites/Tests.R', echo=TRUE)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Lois_de_proba.R', echo=TRUE)
