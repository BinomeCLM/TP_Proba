install.packages(’randtoolbox’)
8*c(8,88,888,8888)+13
(A <- cbind(c(1,8,7),c(0,1,7),c(8,4,0)))
(A <- matrix(c(1,8,7,0,1,7,8,4,0),ncol=3,nrow=3))
(x <- c(2,3,0))
A*x
A%*%x
solve(A)%*%(A%*%x)
L <- list(nom='toto',age=21,notes=c(14,7,12),vect=seq(1,4,by=0.5))
View(L)
L$vect
str(L)
View(L)
aha <- function(a){
a <- a+1
return(a+1)
}
a <- 4
aha(a)
for(i in 1:2){view(1)}
for(i in 1:2){print(i)}
array(1, 2)
array(1, 10)
array(2, 10)
t = array(2,10)
t(1)
t[3]
t[3]=4
t
t[3] <- 5
t
set.seed(215, kind="rand")
set.seed(215, kind="randu")
set.seed(215, kind="RANDU")
RNGkind()
set.seed(215, kind="RANDU")
randu
source('~/TP_Probabilites/generateurs.R')
RANDU(2^31, 215)
RANDU(2, 215)
RANDU(10, 215)
RANDU(10, 215)
StandardMinimal(10,215)
source('~/TP_Probabilites/generateurs.R')
help(hist)
?sample
RANDU(1000, 200)
StandardMinimal(1000,215)
hist(Sobol(1000,20))
hist(Sobol(1000,20))
source('~/TP_Probabilites/generateurs.R')
RANDU(1000, 200)
hist(RANDU(1000, 200))
hist(RANDU(1000, 10))
hist(StandardMinimal(1000, 10))
hist(StandardMinimal(1000, 200))
hist(RANDU(1000, 200))
hist(MersenneTwister(1, 1000, 200))
hist(MersenneTwister(1, 1000, set.seed(200)))
hist(MersenneTwister(1000, 1, set.seed(200)))
hist(MersenneTwister(1000, 1, 200))
help(MersenneTwister)
hist(Mersenne-Twister(1000, 1, 200))
Mersenne-Twister(1000, 1, 200)
MersenneTwister(1000, 1, 200)
mt = MersenneTwister(1000, 1, 200)
mt[1,]
mt[,1]
mt(,1)
mt
mt$x
mt$s
mt$x
mt$x[,1]
hist(mt$x[,1])
hist(mt$x[,1], main="MersenneTwister")
sob <- Sobol(1,1000)
Sobol <- function(n,p)
{
return(round(sobol(n,p)*(2^31-1)))
}
sob <- Sobol(1,1000)
sob <- sobol(1,1000)
sob <- sobol(1000,20)
source('~/TP_Probabilites/seance1.R')
source('~/TP_Probabilites/generateurs.R')
sob <- sobol(1,1000)
sob <- Sobol(1,1000)
hist(sob[,1],xlab='',main='Sobol')
sob <- Sobol(1000,1)
hist(sob[,1],xlab='',main='Sobol')
sob
hist(sob[,1],xlab='',main='Sobol')
hist(sob,xlab='',main='Sobol')
sob <- Sobol(1,1000)
hist(sob,xlab='',main='Sobol')
hist(sob[,1],xlab='',main='Sobol')
TestQu2
TestQu2()
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
TestQu2()
TestQu2()
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
n <- 1000
u <- RANDU(1000,20)
plot(u[1:(n-1)],u[2:n])
uStm <- StandardMinimal(1000,20)
plot(uStm[1:(n-1)],uStm[2:n])
uSob <- Sobol(n,1)
plot(uSob[1:(n-1)],uSob[2:n])
uMt <- MersenneTwister(n, 1, 200)
plot(uMt[1:(n-1)],uMt[2:n])
uMt <- MersenneTwister(n, 1, 200)
plot(uMt$x[1:(n-1)],uMt$x[2:n])
c(1,binary(x-2^31)[2:32])
binary(10)
binary(11)
help pnorm
help pnorm()
help(pnorm
help(pnorm)
help(pnorm)
10^(1/2)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
Frequency <- function(x, nb)
{
somme <- 0
n <- nb*length(x)
bn <- x
resSomme <- x
for (i in 1:length(x)){
bn[i] <- binary(x[i])
if (nb==32){
for (j in 1:nb){
if (bn[i][j] == 0){
bn[i][j] <- -1
}
somme <- somme + bn[i][j]
}
}
else {
for (j in 2:nb){
if (bn[i][j] == 0){
bn[i][j] <- -1
}
somme <- somme + bn[i][j]
}
}
resSomme[i] <- somme
}
sommeTotal <- 0
for (i in 1:length(resSomme))
{
sommeTotal <- sommeTotal + resSomme[i]
}
sObs <- abs(sommeTotal)/(n^(1/2))
pValeur <- 2*(1-pnorm(sObs))
return (pValeur)
}
plot(uSob[1:(n-1)],uSob[2:n])
x = [725]
x <- [725]
x <- vector(725)
x <- c(725)
Frequency(x,32)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
setwd("//servif-home/homes/cetienne/Mes documents/TP_Probabilites")
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
TestQu1()
binary(10)
binary(10)[2]
Frequency(725,10)
Frequency(725,10)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
Frequency(725,10)
help(switch)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
QualiteGenerateur(randu)
array(0, 2)
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
QualiteGenerateur(randu)
hist(QualiteGenerateur(randu))
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
hist(QualiteGenerateur(randu))
hist(QualiteGenerateur(randu))
hist(QualiteGenerateur(randu))
hist(QualiteGenerateur(1))
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
hist(QualiteGenerateur(1))
hist(QualiteGenerateur(2))
source('//servif-home/homes/cetienne/Mes documents/TP_Probabilites/Tests.R')
hist(QualiteGenerateur(2))
hist(QualiteGenerateur(1))
hist(QualiteGenerateur(2))
hist(QualiteGenerateur(3))
hist(QualiteGenerateur(4))
hist(QualiteGenerateur(3))
hist(QualiteGenerateur(4))
hist(QualiteGenerateur(1))
